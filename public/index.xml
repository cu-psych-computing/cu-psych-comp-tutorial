<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Columbia Psychology Scientific Computing</title>
    <link>/</link>
    <description>Recent content in Home on Columbia Psychology Scientific Computing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Programming, Part 0</title>
      <link>/tutorials/r-core/1-programming/lessonpart0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/1-programming/lessonpart0/</guid>
      <description>Welcome to the CU Psychology Scientific Computing workshop!
Programming is telling a computer to do some action to some input info to get output info that you want. When it comes to working with data in R, programming is how we tell R to load data, process it, plot it, fit models to it, and so on (everything!).
In this first section of our tutorial, we will learn about this info that goes in and out, as well as the actions that transform info into what we want.</description>
    </item>
    
    <item>
      <title>Programming, Part 1</title>
      <link>/tutorials/r-core/1-programming/lessonpart1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/1-programming/lessonpart1/</guid>
      <description>Welcome (back) to the CU Psychology Scientific Computing Workshop! As a reminder, the documents for the introduction to programming cover the following:
Programming, Part 0: Finding your way around RStudio Programming, Part 1: Variables, data types, vectors (this document!) Programming, Part 2: Coding strategy, relational &amp;amp; logical operators Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions.</description>
    </item>
    
    <item>
      <title>Programming, Part 2</title>
      <link>/tutorials/r-core/1-programming/lessonpart2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/1-programming/lessonpart2/</guid>
      <description>Welcome (back) to the CU Psychology Scientific Computing workshop! As a reminder, the documents for the introduction to programming cover the following:
Programming, Part 0: Finding your way around RStudio Programming, Part 1: Variables, data types, vectors Programming, Part 2: Coding strategy, relational &amp;amp; logical operators (this document!) Now that you know (some of) what kinds of things R can manipulate, we will get into actually manipulating things!
Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions.</description>
    </item>
    
    <item>
      <title>Data Cleaning</title>
      <link>/tutorials/r-core/2-datacleaning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/2-datacleaning/</guid>
      <description>Goals of This Lesson Students will learn:
How to open various data types in R How to check for missing or problematic data and address issues. How to filter, rearrange and shape data in preparation for analysis. Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-core/2-datacleaning/index.rmd.</description>
    </item>
    
    <item>
      <title>Data Manipulation</title>
      <link>/tutorials/r-core/3-datamanipulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/3-datamanipulation/</guid>
      <description>Goals of This Lesson Learn how to group and categorize data in R Learn how to generate descriptive statistics in R Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-core/3-datamanipulation/index.rmd.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 2 page.</description>
    </item>
    
    <item>
      <title>Plotting with `ggplot2`</title>
      <link>/tutorials/r-core/4-plotting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/4-plotting/</guid>
      <description>What Is This Tutorial? What’s ggplot2? ggplot2 is a package in R that allows for highly customizable and pretty plots! Here, were going to learn a few basics of making plots using ggplot2 that will hopefully get you well on your way to making informative and beautiful data visualizations!
Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions.</description>
    </item>
    
    <item>
      <title>Modeling</title>
      <link>/tutorials/r-core/5-modeling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/5-modeling/</guid>
      <description>Goals of This Lesson Learn about functions and syntax for models in R Practice examples of different model types Understand how to obtain model results in R
Learn how to visualize the results of the models Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-core/5-modeling/index.rmd.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 2 page.</description>
    </item>
    
    <item>
      <title>Basic Plotting in `ggplot2`</title>
      <link>/tutorials/r-extra/accelerated-ggplot2/ggplot_summer2018_part1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/accelerated-ggplot2/ggplot_summer2018_part1/</guid>
      <description>Make ’em Graph Welcome! This tutorial will cover some basics of scatter plots, time series data, and some alternatives to bar graphs (for categorical predictors and continuous outcomes). It will also go over a few handy things along the way, such as making graphs with multiple panels, and aesthetic mapping for clearer plots.
Note: All examples here will be with simulated data, so that as we are making our plots we can be aware of the TRUE data generating processes and assess how well our graphs represent these.</description>
    </item>
    
    <item>
      <title>More Advanced `ggplot2` Plotting</title>
      <link>/tutorials/r-extra/accelerated-ggplot2/ggplot_summer2018_part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/accelerated-ggplot2/ggplot_summer2018_part2/</guid>
      <description>God grant me the serenity to accept the uncertainty I cannot control; courage to control the uncertainty that I cannot accept; and wisdom to know the difference. -Andrew Gelman
All models are wrong, but some are useful - George Box
1) Overview Welcome! This tutorial will cover some aspects of plotting modeled data within the context of multilevel (or ‘mixed-effects’) regression models. Specifically, we’ll be using the lme4, brms, and rstanarm packages to model and ggplot to display the model predictions.</description>
    </item>
    
    <item>
      <title>Tidy Walkthrough, Part 1</title>
      <link>/tutorials/r-extra/tidyverse-guide/tidyguide-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/tidyverse-guide/tidyguide-1/</guid>
      <description>Goals for this vignette Demonstrate (what I think are) key first-level features of the tidyverse Illustrate psychology use cases for tidyverse functions Hopefully convince you to join the cult of tidy We shall do this by walking through various use cases you might encounter with your data. I’ll jump in with specific examples of functions when appropriate, to highlight solutions for particular situations you might run into with your own data.</description>
    </item>
    
    <item>
      <title>Tidy Walkthrough, Part 2</title>
      <link>/tutorials/r-extra/tidyverse-guide/tidyguide-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/tidyverse-guide/tidyguide-2/</guid>
      <description>Goals for this vignette Hello (again)! This is a continuation of our tour through base tidyverse (see Part 1 here). Our goals are the same as before:
Demonstrate (what I think are) key first-level features of the tidyverse Illustrate psychology use cases for tidyverse functions Hopefully convince you to join the cult of tidy This time, we’ll be moving ahead to some more complex use cases utilizing some more advanced programming tactics.</description>
    </item>
    
    <item>
      <title>Basic Data Simulation &amp; Power Analysis</title>
      <link>/tutorials/r-extra/data-sim-power/basic-simulation-power/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/data-sim-power/basic-simulation-power/</guid>
      <description>Links to Files The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-extra/data-sim-power/basic-simulation-power.rmd.
Why Simulate? Simulation is an extremely useful tool, because we can create ground truth by which to test our models. If we know the true process by which the data are generated, we can check whether our models are doing well at recovering this truth.</description>
    </item>
    
    <item>
      <title>Bayesian Multilevel Modeling with `brms`</title>
      <link>/tutorials/r-extra/brms/multilevel-models-with-brms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/brms/multilevel-models-with-brms/</guid>
      <description>Links to Files The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-extra/brms/multilevel-models-with-brms.rmd.
0) Goals for this vignette Give a quick intro to multilevel modeling and Bayesian inference Show a use case with Brms and some helpful syntax for demonstrating what this model does Hopefully, convince you to use multilevel modeling and Bayesian approaches for your stats 1) Why multilevel modeling?</description>
    </item>
    
    <item>
      <title>Intro to RMarkdown</title>
      <link>/tutorials/r-extra/rmarkdown/intro-to-rmarkdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/rmarkdown/intro-to-rmarkdown/</guid>
      <description>Links to Files The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-extra/rmarkdown/intro-to-rmarkdown.rmd.
Getting started To work with R Markdown, if necessary:
Install R Install the latest version of RStudio Install the latest version of the knitr package: install.packages(&#34;knitr&#34;) If you’re looking for a quick reference to R Markdown formatting, I strongly suggest you check out this helpful cheat sheet!</description>
    </item>
    
    <item>
      <title>Creating a Website with Github and R</title>
      <link>/tutorials/r-extra/website-github-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/website-github-r/</guid>
      <description> Workshop Slides Video Recording </description>
    </item>
    
    <item>
      <title>Exploring Varieties of Error Intervals</title>
      <link>/tutorials/r-extra/error-intervals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/error-intervals/</guid>
      <description>Workshop Slides Slides can also be viewed fullscreen here.</description>
    </item>
    
    <item>
      <title>Choosing Between R and Python</title>
      <link>/tutorials/python/1-r2python-translation/0-python-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/1-r2python-translation/0-python-r/</guid>
      <description>Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/python/1-r2python-translation/0-python-r.ipynb.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 3 page.
A few quick points: Among scientific computing languages the best language for you is the one that you find best fits your projects We really encourage the use of either R and Python for research computing for several reasons R and Python are open source!</description>
    </item>
    
    <item>
      <title>Getting Started with Jupyter Notebooks</title>
      <link>/tutorials/python/1-r2python-translation/1-getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/1-r2python-translation/1-getting-started/</guid>
      <description>Goals: Students will feel comfortable navigating the jupyter notebook layout Students will be able to access their computer&amp;rsquo;s file structure through jupyter notebook Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/python/1-r2python-translation/1-getting-started.ipynb.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 3 page.</description>
    </item>
    
    <item>
      <title>Intro to Programming in Python</title>
      <link>/tutorials/python/1-r2python-translation/2-intro-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/1-r2python-translation/2-intro-programming/</guid>
      <description>Disclaimer! This intro programming tutorial in Python is NOT nearly as comprehensive as the intro programming tutorial in R. If you have never programmed in any language before, this tutorial may skip key pieces of information. Instead, the goal of this tutorial is to provide some key pieces of &amp;rsquo;translation&amp;rsquo; information for people with some programming experience who would like to use Python. Goals of this Lesson Students will: Understand and be comfortable working with the basic data types in Python Be able to use arithmetic, relational operators, and lists in Python For those coming from R, be aware of differences across languages, especially in indexing Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions.</description>
    </item>
    
    <item>
      <title>Control Flow in Python</title>
      <link>/tutorials/python/1-r2python-translation/3-control-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/1-r2python-translation/3-control-flow/</guid>
      <description>Goals of this lesson Students will learn: How to use if/else and for loops in python How to indent code correctly in python Links to Files The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/python/1-r2python-translation/3-control-flow.ipynb.
Indenting in python Python, unlike R, is strict about indentation! Indentations in python often have bearing on the order in which they are executed, and switching indentation can change how code runs (or break it) Coming from R, indentation might seem annoying at first, but eventually this can help with code readability Ultimately, python is trying to help us stay organized If statements If statements in python are the equivalent of the following English: &amp;ldquo;If condition X is met, then do action Y&amp;rdquo; If statements in python consist of the following syntax if (condition X): actions.</description>
    </item>
    
    <item>
      <title>Data Cleaning in Python</title>
      <link>/tutorials/python/2-datacleaning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/2-datacleaning/</guid>
      <description>Goals of this Lesson Students will learn: How to open various data types in Python How to check for missing or problematic data and address issues How to filter, rearrange and shape data in preparation for analysis Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/python/2-datacleaning/index.ipynb.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 3 page.</description>
    </item>
    
    <item>
      <title>Data Manipulation in Python</title>
      <link>/tutorials/python/3-datamanipulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/3-datamanipulation/</guid>
      <description>Goals of this Lesson Students will learn: How to group and categorize data in Python How to generative descriptive statistics in Python Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/python/3-datamanipulation/index.ipynb.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 3 page.</description>
    </item>
    
    <item>
      <title>Plotting in Python Using `matplotlib` and `seaborn`</title>
      <link>/tutorials/python/4-plotting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/4-plotting/</guid>
      <description>Goals of this Lesson Students will learn: How to generate beautiful statistical visualizations in Python using the seaborn package Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/python/4-plotting/index.ipynb.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 3 page.</description>
    </item>
    
    <item>
      <title>Instructions for Accessing Tutorial Files</title>
      <link>/accessing-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/accessing-files/</guid>
      <description>Instructions for Accessing Tutorial Files As noted at the top of each of our tutorials, all files can be downloaded from the Columbia Psychology Scientific Computing GitHub page. In these notes, we list where the specific RMarkdown file for that tutorial is located (e.g., /content/tutorials/r-core/1-programming/lessonpart0.rmd).
This page contains instructions for downloading and opening such files. If you experience any issues in completing these steps, feel free to drop us a note at psych-methods-support@columbia.</description>
    </item>
    
    <item>
      <title>Introductory Scientific Computing Workshop</title>
      <link>/workshop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshop/</guid>
      <description>Introductory Scientific Computing Workshop (Fall 2022) Instructors: Cheyenne Wakeland-Hart, John Andrew Chwe
General Information This workshop develops and teaches the scientific computing skills needed to conduct psychological research. Its target audience is researchers who have little to no prior computational experience, and its lessons are psychology-specific, building on learners’ existing knowledge to enable them to quickly apply skills learned to their own research.
Who: The course is aimed at graduate, postbac, and undergraduate students, as well as other researchers.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/license/</guid>
      <description>License Instructional Material All CU Psych Computing instructional material is made available under the Creative Commons Attribution license. The following is a human-readable summary of (and not a substitute for) the full legal text of the CC BY 4.0 license.
You are free:
to Share—copy and redistribute the material in any medium or format to Adapt—remix, transform, and build upon the material for any purpose, even commercially.
The licensor cannot revoke these freedoms as long as you follow the license terms.</description>
    </item>
    
    <item>
      <title>Meetings</title>
      <link>/meetings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/meetings/</guid>
      <description>Meetings Come and learn with us at one of our meetings! Topics span various early-intermediate to advanced strategies for asking psychological research questions using scientific computing tools.
Upcoming Workshop Stay tuned!
Past Workshop Certain in Your Uncertainty: Exploring Varieties of Error Intervals
Instructors: Monica Thieu and Paul Bloom
Date: Wednesday, March 10th, 2021 at 3:00pm
Workshop Materials: See tutorial page Creating a Website with Github and R
Instructor: Emily Nakkawita</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resources/</guid>
      <description>Resources Columbia-Specific Resources Columbia Psychology scientific computing users Slack group Full, Freestanding General-Use R Tutorials Mainly base R tutorials Cookbook for R: Basics of data cleaning, analysis and graphing Tidyverse tutorials Hadley Wickham’s R for Data Science online textbook Michael C. Frank’s psychology-specific tidyverse tutorial, adapted from R for Data Science Syllabi for courses taught in R You can work along with these; course materials should be linked in the syllabi.</description>
    </item>
    
    <item>
      <title>Who We Are</title>
      <link>/who/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/who/</guid>
      <description>Who We Are 2022 - 2023 Graduate Methods Support Cheyenne Wakeland-Hart Research interests: Human memory Method specialties: tDCS,Large-scale web-based behavioral experiments Tool/language specialties: R, Matlab, Gorilla, MTurk, Python Favorite NYC restaurant: NR John Andrew Chwe Research interests: Social vision, Social neuroscience Method specialties: Web-based behavioral experiments, Neuroimaging Tool/language specialties: Python, R, Javascript, Bash Favorite NYC restaurant: KazuNori Office hours will be held by appointment. Please contact us at psych-methods-support@columbia.edu to schedule a time that works well for you!</description>
    </item>
    
    <item>
      <title>Workshop Recording: Session 1</title>
      <link>/workshop-recording/session1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshop-recording/session1/</guid>
      <description> Workshop Recording: Session 1 Session 1 Tutorials: Click on the timestamp to jump to the beginning of the tutorial.
Programming in R, Part 0: 0:00:05 [Materials] Programming in R, Part 1: 1:12:10 [Materials] Programming in R, Part 2: 2:13:36 [Materials] </description>
    </item>
    
    <item>
      <title>Workshop Recording: Session 2</title>
      <link>/workshop-recording/session2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshop-recording/session2/</guid>
      <description> Workshop Recording: Session 2 Session 2 Tutorials: Click on the timestamp to jump to the beginning of the tutorial.
Data Cleaning in R: 0:00:05 [Materials] Data Manipulation in R: 1:13:40 [Materials] Plotting in R: 1:48:41 [Materials] Modeling in R: 3:23:47 [Materials] </description>
    </item>
    
    <item>
      <title>Workshop Recording: Session 3</title>
      <link>/workshop-recording/session3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/workshop-recording/session3/</guid>
      <description> Workshop Recording: Session 3 Session 3 Tutorials: Click on the timestamp to jump to the beginning of the tutorial.
Intro to Python for R Users: 0:00:05 [Part 0 Materials| Part 1 Materials | Part 2 Materials] Data Cleaning in Python: 0:45:27 [Materials] Data Manipulation in Python: 1:38:29 [Materials] Plotting in Python: 2:10:09 [Materials] </description>
    </item>
    
  </channel>
</rss>
