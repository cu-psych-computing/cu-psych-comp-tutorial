<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Columbia Psychology Scientific Computing</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Columbia Psychology Scientific Computing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Programming in R</title>
      <link>/tutorials/r-core/1-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/1-programming/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Programming, Part 0</title>
      <link>/tutorials/r-core/1-programming/lessonpart0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/1-programming/lessonpart0/</guid>
      <description>Welcome to the CU Psychology Scientific Computing workshop!
Programming is telling a computer to do some action to some input info to get output info that you want. When it comes to working with data in R, programming is how we tell R to load data, process it, plot it, fit models to it, and so on (everything!).
In this first section of our tutorial, we will learn about this info that goes in and out, as well as the actions that transform info into what we want.</description>
    </item>
    
    <item>
      <title>Programming, Part 1</title>
      <link>/tutorials/r-core/1-programming/lessonpart1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/1-programming/lessonpart1/</guid>
      <description>Welcome (back) to the CU Psychology Scientific Computing Workshop! As a reminder, the documents for the introduction to programming cover the following:
Programming, Part 0: Finding your way around RStudio Programming, Part 1: Variables, data types, vectors (this document!) Programming, Part 2: Coding strategy, relational &amp;amp; logical operators Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions.</description>
    </item>
    
    <item>
      <title>Programming, Part 2</title>
      <link>/tutorials/r-core/1-programming/lessonpart2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/1-programming/lessonpart2/</guid>
      <description>Welcome (back) to the CU Psychology Scientific Computing workshop! As a reminder, the documents for the introduction to programming cover the following:
Programming, Part 0: Finding your way around RStudio Programming, Part 1: Variables, data types, vectors Programming, Part 2: Coding strategy, relational &amp;amp; logical operators (this document!) Now that you know (some of) what kinds of things R can manipulate, we will get into actually manipulating things!
Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions.</description>
    </item>
    
    <item>
      <title>Data Cleaning</title>
      <link>/tutorials/r-core/2-datacleaning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/2-datacleaning/</guid>
      <description>Goals of This Lesson Students will learn:
How to open various data types in R How to check for missing or problematic data and address issues. How to filter, rearrange and shape data in preparation for analysis. Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-core/2-datacleaning/index.rmd.</description>
    </item>
    
    <item>
      <title>Data Manipulation</title>
      <link>/tutorials/r-core/3-datamanipulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/3-datamanipulation/</guid>
      <description>Goals of This Lesson Learn how to group and categorize data in R Learn how to generate descriptive statistics in R Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-core/3-datamanipulation/index.rmd.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 2 page.</description>
    </item>
    
    <item>
      <title>Plotting with `ggplot2`</title>
      <link>/tutorials/r-core/4-plotting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/4-plotting/</guid>
      <description>What Is This Tutorial? What’s ggplot2? ggplot2 is a package in R that allows for highly customizable and pretty plots! Here, were going to learn a few basics of making plots using ggplot2 that will hopefully get you well on your way to making informative and beautiful data visualizations!
Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions.</description>
    </item>
    
    <item>
      <title>Modeling</title>
      <link>/tutorials/r-core/5-modeling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-core/5-modeling/</guid>
      <description>Goals of This Lesson Learn about functions and syntax for models in R Practice examples of different model types Understand how to obtain model results in R
Learn how to visualize the results of the models Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-core/5-modeling/index.rmd.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 2 page.</description>
    </item>
    
    <item>
      <title>Accelerated `ggplot2`</title>
      <link>/tutorials/r-extra/accelerated-ggplot2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/accelerated-ggplot2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Basic Plotting in `ggplot2`</title>
      <link>/tutorials/r-extra/accelerated-ggplot2/ggplot_summer2018_part1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/accelerated-ggplot2/ggplot_summer2018_part1/</guid>
      <description>Make ’em Graph Welcome! This tutorial will cover some basics of scatter plots, time series data, and some alternatives to bar graphs (for categorical predictors and continuous outcomes). It will also go over a few handy things along the way, such as making graphs with multiple panels, and aesthetic mapping for clearer plots.
Note: All examples here will be with simulated data, so that as we are making our plots we can be aware of the TRUE data generating processes and assess how well our graphs represent these.</description>
    </item>
    
    <item>
      <title>More Advanced `ggplot2` Plotting</title>
      <link>/tutorials/r-extra/accelerated-ggplot2/ggplot_summer2018_part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/accelerated-ggplot2/ggplot_summer2018_part2/</guid>
      <description>God grant me the serenity to accept the uncertainty I cannot control; courage to control the uncertainty that I cannot accept; and wisdom to know the difference. -Andrew Gelman
All models are wrong, but some are useful - George Box
1) Overview Welcome! This tutorial will cover some aspects of plotting modeled data within the context of multilevel (or ‘mixed-effects’) regression models. Specifically, we’ll be using the lme4, brms, and rstanarm packages to model and ggplot to display the model predictions.</description>
    </item>
    
    <item>
      <title>A Guided Tour of the `tidyverse`</title>
      <link>/tutorials/r-extra/tidyverse-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/tidyverse-guide/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tidy Walkthrough, Part 1</title>
      <link>/tutorials/r-extra/tidyverse-guide/tidyguide-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/tidyverse-guide/tidyguide-1/</guid>
      <description>Goals for this vignette Demonstrate (what I think are) key first-level features of the tidyverse Illustrate psychology use cases for tidyverse functions Hopefully convince you to join the cult of tidy We shall do this by walking through various use cases you might encounter with your data. I’ll jump in with specific examples of functions when appropriate, to highlight solutions for particular situations you might run into with your own data.</description>
    </item>
    
    <item>
      <title>Tidy Walkthrough, Part 2</title>
      <link>/tutorials/r-extra/tidyverse-guide/tidyguide-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/tidyverse-guide/tidyguide-2/</guid>
      <description>Goals for this vignette Hello (again)! This is a continuation of our tour through base tidyverse (see Part 1 here). Our goals are the same as before:
Demonstrate (what I think are) key first-level features of the tidyverse Illustrate psychology use cases for tidyverse functions Hopefully convince you to join the cult of tidy This time, we’ll be moving ahead to some more complex use cases utilizing some more advanced programming tactics.</description>
    </item>
    
    <item>
      <title>Basic Data Simulation &amp; Power Analysis</title>
      <link>/tutorials/r-extra/data-sim-power/basic-simulation-power/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/data-sim-power/basic-simulation-power/</guid>
      <description>Links to Files The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-extra/data-sim-power/basic-simulation-power.rmd.
Why Simulate? Simulation is an extremely useful tool, because we can create ground truth by which to test our models. If we know the true process by which the data are generated, we can check whether our models are doing well at recovering this truth.</description>
    </item>
    
    <item>
      <title>Bayesian Multilevel Modeling with `brms`</title>
      <link>/tutorials/r-extra/brms/multilevel-models-with-brms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/brms/multilevel-models-with-brms/</guid>
      <description>Links to Files The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-extra/brms/multilevel-models-with-brms.rmd.
0) Goals for this vignette Give a quick intro to multilevel modeling and Bayesian inference Show a use case with Brms and some helpful syntax for demonstrating what this model does Hopefully, convince you to use multilevel modeling and Bayesian approaches for your stats 1) Why multilevel modeling?</description>
    </item>
    
    <item>
      <title>Intro to RMarkdown</title>
      <link>/tutorials/r-extra/rmarkdown/intro-to-rmarkdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/rmarkdown/intro-to-rmarkdown/</guid>
      <description>Links to Files The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/r-extra/rmarkdown/intro-to-rmarkdown.rmd.
Getting started To work with R Markdown, if necessary:
Install R Install the latest version of RStudio Install the latest version of the knitr package: install.packages(&#34;knitr&#34;) If you’re looking for a quick reference to R Markdown formatting, I strongly suggest you check out this helpful cheat sheet!</description>
    </item>
    
    <item>
      <title>Creating a Website with Github and R</title>
      <link>/tutorials/r-extra/website-github-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/website-github-r/</guid>
      <description> Workshop Slides Video Recording </description>
    </item>
    
    <item>
      <title>Exploring Varieties of Error Intervals</title>
      <link>/tutorials/r-extra/error-intervals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/r-extra/error-intervals/</guid>
      <description>Workshop Slides Slides can also be viewed fullscreen here.</description>
    </item>
    
    <item>
      <title>R to Python Translation</title>
      <link>/tutorials/python/1-r2python-translation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/1-r2python-translation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Choosing Between R and Python</title>
      <link>/tutorials/python/1-r2python-translation/0-python-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tutorials/python/1-r2python-translation/0-python-r/</guid>
      <description>Links to Files and Video Recording The files for all tutorials can be downloaded from the Columbia Psychology Scientific Computing GitHub page using these instructions. This particular file is located here: /content/tutorials/python/1-r2python-translation/0-python-r.ipynb.
For a video recording of this tutorial from the Fall 2020 workshop, please visit the Workshop Recording: Session 3 page.
A few quick points: Among scientific computing languages the best language for you is the one that you find best fits your projects We really encourage the use of either R and Python for research computing for several reasons R and Python are open source!</description>
    </item>
    
  </channel>
</rss>
